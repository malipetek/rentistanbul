import { error } from '@sveltejs/kit';
import directus from '$lib/directus.js';
import { BYPASS_TOKEN } from '$env/static/private';

/** @type {import('./$types').PageLoad} */
export async function load({ params }) {
  try {
    const data = await directus.items('rentals').readOne(params.id, {
      deep: true, fields: [
        'title',
        'description',
        'image',
        'images.*']
    });
        return {
          params,
          rental: {
            ...data,
            data,
            images: data.images.map(image => image.directus_files_id)
          }
        };
  } catch (err) {
    throw error(404, err.message);
  }
}

export const config = {
  isr: {
    // Random token that can be provided to bypass the cached version of the page with a __prerender_bypass=<token> cookie. Allows rendering content at request time for this route.
    bypassToken: BYPASS_TOKEN,

    // Expiration time (in seconds) before the cached asset will be re-generated by invoking the Serverless Function.
    // Setting the value to `false` means it will never expire.
    expiration: 60,
  },
};